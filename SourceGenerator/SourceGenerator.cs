using Microsoft.CodeAnalysis;
using static System.Net.Mime.MediaTypeNames;
using System.Xml.Linq;
using System.IO;
using System.Collections.Generic;
using System.Xml.Serialization;

namespace SourceGenerator
{
    [Generator]
    public class HelloSourceGenerator : ISourceGenerator
    {
        public void Execute(GeneratorExecutionContext context)
        {
            var files = Directory.GetFiles("nodes");
            string listNodes = "[";
            for (int i = 0; i < files.Length; i++)
            {
                // Я не знаю, но если я подключаю нугет пакет джейсонсериализации, то оно перестает линковаться,
                // я долго бился и не нашел лучшего способа чем просто сериализовать списки руками, это же несложно
                // (предложенная в условии сериализация без нугетов не катит, тк генератор поддерживает только 2ая версия нета,
                // а та сериализация появилась в 3 версии)
                if (i != 0)
                {
                    listNodes += ",";
                }
                var path = files[i].Replace("\\", "\\\\");
                listNodes += (File.ReadAllText(path).Replace("\"","\"\"").Replace(":","::") + " ") ;
            }
            listNodes += "]";
            string source = $@"// <auto-generated/>
             
using System;
using System.Text.Json;

namespace  ClassLibraryPart_2
{{
    public partial class Vault<T>
    {{

        static partial void AutoDownload(int index, Vault<T> v) 
        {{
            string s = @""{listNodes}"";
            List<Node<T>> listNodes = JsonSerializer.Deserialize<List<Node<T>>>(s.Replace(""::"","":""));
            v.Add(listNodes[index]);
        }}
    }}
}}
";
            context.AddSource($"Vault.g.cs", source);
        }
        public void Initialize(GeneratorInitializationContext context)
        {
            // No initialization required for this one
        }
    }
}